security:
    # Password hashers are responsible for encoding passwords.
    # The 'auto' option will automatically select the best available hasher based on your system configuration.
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    
    # User providers are used to load users from your storage of choice (e.g. database, in-memory, etc.)
    providers:
        # The 'app_user_provider' is a custom user provider.
        app_user_provider:
            id: 'User\Infrastructure\Adapter\Security\UserProvider'
    
    # Firewalls are used to restrict access based on patterns and other rules.
    firewalls:
        # The 'dev' firewall applies to URLs that match the given regular expression pattern.
        # It is typically used for development resources like profiler, web debug toolbar, static assets, etc.
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        # The 'api' firewall applies to URLs that start with '/api/'.
        # It is stateless meaning it does not use sessions.
        api:
            pattern: ^/api/
            stateless: true
            provider: app_user_provider
            jwt: ~
        
        # The 'main' firewall is the default one and it handles login with JSON.
        main:
            json_login:
                username_path: username
                password_path: password
                # Handlers for successful and failed authentication attempts.
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
    
    # Access control rules define which roles have access to which URLs.
    access_control:
        # This rule means that any URL that starts with '/api' requires the user to be fully authenticated.
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }